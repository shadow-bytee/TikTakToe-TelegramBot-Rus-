from settings import *
from callback_handlers import menu_func
from db_utils import *

import telebot
from telebot import types
import sqlite3
import datetime
from colorama import Fore, Back, Style





#===================–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–º–∞–Ω–¥—ã===========================

def start(message):
	conn = sqlite3.connect("balances.sql")
	cur = conn.cursor()
	
	# –í—Å—Ç–∞–≤–∫–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	cur.execute("""
		INSERT INTO users (idchat, name, balance, vip) 
		VALUES (?, ?, ?, ?) 
		ON CONFLICT(idchat) DO NOTHING
	""", (message.chat.id, f"{str(message.from_user.first_name)} // @{str(message.from_user.username)}", 0, False))

	cur.execute("SELECT * FROM users")
	users = cur.fetchall()

	conn.commit()
	cur.close()
	conn.close()

	bot.send_message(message.chat.id, "üõë–ë–û–¢ –ï–©–Å –ù–ê –°–¢–ê–î–ò–ò –†–û–ó–†–ê–ë–û–¢–ö–òüõë")
	bot.send_message(message.chat.id, f"üìö–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–µ <b><a href='http://t.me/nolik_krestik_bot'>–ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏</a></b>!!\n\n<b>üìå–ß—Ç–æ –º–æ–∂–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?</b>\n-–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ.\n-–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –ª—ë–≥–∫–∏–µ –¥–µ–Ω—å–≥–∏.\n-–ü–æ–∏–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏.\n-–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö –∏–≥—Ä(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ).\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ - {len(users)}\n\n‚ùóÔ∏è–í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å <b><a href='https://drive.google.com/file/d/1P3E8tLHqEW1fqZHTdw8HFsiYVx_VvhCZ/view?usp=drivesdk'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º</a></b>.\n\n-–í–µ—Ä—Å–∏—è –±–æ—Ç–∞ v1.0.0 (Beta)", parse_mode="HTML")
	menu_func(message.chat.id)

def promo(message):
	data = str(message.text).split()[1:]
	id_promo = int(data[0])

	if id_promo > 10000:
		bot.send_message(message.from_user.id, "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 10000‚≠ê")
	else:
		update_user_balance(message.from_user.id, id_promo)

		bot.send_message(message.from_user.id, f"üî´–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>{id_promo}</b>‚≠ê.\n –ë–∞–ª–∞–Ω—Å: <b>{get_user_balance(message.from_user.id)}</b>‚≠ê.", parse_mode="HTML")




#================================ADMIN==========================================

def test_command(message):                     # /test
	if message.chat.id == ADMIN_ID:
		pass


def users(message):                              # /users
	if message.chat.id == ADMIN_ID:
		conn = sqlite3.connect("balances.sql")
		cur =  conn.cursor()
	
		cur.execute("SELECT * FROM users")
		users = cur.fetchall()
	
		info = ""
		all_bal = 0
		for el in users:
			info += f"- ({'üëë' if el[3] else ''}<code>{el[0]}</code>, {el[1]}, {el[2]}‚≠ê)\n\n"
			all_bal += float(el[2])

		cur.close()
		conn.close()
	
		# users / balances
		all_bal -= get_user_balance(ADMIN_ID)
		all_bal -= get_user_balance(5915646309)
		bot.send_message(message.chat.id, info + f"\n\n<b>–û–±—â–∏–π –±–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {all_bal}‚≠ê</b>", parse_mode="HTML")

def show_transactions(message):               # /trans
	if message.chat.id == ADMIN_ID:
		transactions = bot.get_star_transactions().transactions
		
		# –°–æ–±–∏—Ä–∞–µ–º ID –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤
		transaction_ids = set()
		refund_ids = set()
		
		for transaction in transactions:
			if transaction.source:
				transaction_ids.add(transaction.id)
			else:
				refund_ids.add(transaction.id)
		
		# –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –ù–ï–¢ –≤–æ–∑–≤—Ä–∞—Ç–∞
		valid_transactions = [t for t in transactions if t.id not in refund_ids]
		
		for transaction in valid_transactions:
			# –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–æ–∑–≤—Ä–∞—Ç—ã (–æ–Ω–∏ —É–∂–µ –∏—Å–∫–ª—é—á–µ–Ω—ã)
			if not transaction.source:
				continue  
			
			# –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
			transaction_id = transaction.id
			amount = transaction.amount
			timestamp = transaction.date
			date = datetime.datetime.utcfromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M:%S')  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É
			
			# –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
			user = transaction.source.user
			user_id = user.id if user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			first_name = user.first_name  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			username = user.username if user and hasattr(user, 'username') else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'  # –ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			
			payload = transaction.source.invoice_payload
			
			# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
			print(f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID: {transaction_id}")
			print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥: {amount}")
			print(f"–î–∞—Ç–∞: {date}")
			print(f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: ID={user_id}, –ò–º—è={first_name}, –ù–∏–∫–Ω–µ–π–º={username}")
			print(f"Payload: {payload}")
			print(Back.MAGENTA + "-" * 50 + Style.RESET_ALL)
		
		bot.send_message(ADMIN_ID, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—ã–≤–µ–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª—å")


def show_transactions_all(message):              # /transall
	if message.chat.id == ADMIN_ID:
		transactions = bot.get_star_transactions()
		for transaction in transactions.transactions:
			# –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
			transaction_id = transaction.id
			amount = transaction.amount
			timestamp = transaction.date
			date = datetime.datetime.utcfromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M:%S')  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É
	
			if transaction.source:
				# –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è			
				user = transaction.source.user
				user_id = user.id if user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				first_name = user.first_name  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				username = user.username if user and hasattr(user, 'username') else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'  # –ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	
				payload = transaction.source.invoice_payload
	
				# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
				print(f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID: {transaction_id}")
				print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥: {amount}")
				print(f"–î–∞—Ç–∞: {date}")
				print(f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: ID={user_id}, –ò–º—è={first_name}, –ù–∏–∫–Ω–µ–π–º={username}")
				print(f"Payload: {payload}")
				print(Back.MAGENTA + "-" * 50 + Style.RESET_ALL)
			else:
				# —ç—Ç–æ –≤–æ–∑–≤—Ä–∞—Ç—ã
				print(Back.YELLOW + f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID: {transaction_id}")
				print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥: {amount}")
				print(f"–î–∞—Ç–∞: {date}" + Style.RESET_ALL)
				print(Back.MAGENTA + "-" * 50 + Style.RESET_ALL)
	
		bot.send_message(ADMIN_ID, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—ã–≤–µ–¥–µ–Ω–µ–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª—å")


def deposit(message):                 # /admin (id_user) (amount)
	if message.chat.id == ADMIN_ID:
		data = str(message.text).split()[1:]
		id_user = int(data[0])
		amount = int(data[1])
		
		update_user_balance(id_user, amount)

		bot.send_message(id_user, f"üî´–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>{amount}</b>‚≠ê.\n –ë–∞–ª–∞–Ω—Å: <b>{get_user_balance(id_user)}</b>‚≠ê.", parse_mode="HTML")
		bot.send_message(ADMIN_ID, "–£—Å–ø–µ—à–Ω–æ!")

def refund(message):                   # /refund (id_user) (id_transaction)
	if message.chat.id == ADMIN_ID:
		data = str(message.text).split()[1:]
		id_user = int(data[0])
		transaction_id = data[1]

		try:
			rf = bot.refund_star_payment(id_user, transaction_id)
		except Exception as e:
			print(Back.RED + "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:\n" + Style.RESET_ALL + Fore.RED + str(e) + Style.RESET_ALL)
		if rf:
			bot.send_message(ADMIN_ID, "–£—Å–ø–µ—à–Ω–æ!")

def zero(message):                 # /zero (id_user)
	if message.chat.id == ADMIN_ID:
		data = str(message.text).split()[1:]
		id_user = int(data[0])
		
		update_user_balance(id_user, -(get_user_balance(id_user)))

		#bot.send_message(id_user, f"üò¢–í–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω—É–ª—ë–Ω :(", parse_mode="HTML")
		bot.send_message(ADMIN_ID, "–£—Å–ø–µ—à–Ω–æ!")

def setvip(message):                  # /vip (id_user) (0-1)
	if message.chat.id == ADMIN_ID:
		data = str(message.text).split()[1:]
		id_user = int(data[0])
		vipactive = bool(int(data[1]))
		
		update_vip_status(id_user, vipactive)

		if vipactive:
			bot.send_message(id_user, f"<b>VIP-—Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>", parse_mode="HTML")
		else:
			bot.send_message(id_user, f"<b>VIP-—Å—Ç–∞—Ç—É—Å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω :(</b>", parse_mode="HTML")

		bot.send_message(ADMIN_ID, "–£—Å–ø–µ—à–Ω–æ!")